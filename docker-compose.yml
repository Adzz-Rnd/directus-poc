version: "3.8"

services:
  # Directus CMS Backend
  directus-backend:
    build:
      context: ./directus
      dockerfile: Dockerfile
    ports:
      - "8055:8055"
    environment:
      NODE_ENV: production
      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: directus
      DB_USER: postgres
      DB_PASSWORD: yourpassword
      DATABASE_URL: postgresql://postgres:yourpassword@postgres:5432/directus
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin123
      KEY: d41d8cd98f00b204e9800998ecf8427e
      SECRET: 6c0e9c8b9c8b9c8b9c8b9c8b9c8b9c8b
      CORS_ENABLED: true
      CORS_ORIGIN: http://localhost:3001
    env_file:
      - ./directus/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - directus_uploads:/directus/uploads
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://0.0.0.0:8055/server/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Astro Frontend
  astro-frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DIRECTUS_URL: http://directus-backend:8055
    depends_on:
      directus-backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    restart: always
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: directus
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  directus_uploads:
